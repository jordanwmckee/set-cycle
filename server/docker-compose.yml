version: "3.9"
services:
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sets-app
    ports:
      - "3306:3306"
    volumes:
      - ./db-config/scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql
      - ./db-config/mysql-data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql # Use the service name of the MySQL container
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "80:80"
    depends_on:
      - mysql

  # This will mount the go code into the container and run it
  go-app:
    image: golang:latest # Use the Go image for runtime
    container_name: go-app
    working_dir: /app # Set the working directory inside the container
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
    ports:
      - "8080:8080"
    volumes:
      - ./app:/app # Mount the host directory containing your Go app code into the container
    depends_on:
      - mysql
    command:
      [
        "./docker/docker-entrypoint.sh",
        "gin",
        "--appPort",
        "8080",
        "--all",
        "-i",
        "run",
        "main.go",
      ]

  # This section will build the go code inside the docker container using the Dockerfile
  # api:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   container_name: sets-app
  #   environment:
  #     - DB_HOST=mysql
  #     - DB_PORT=3306
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mysql
